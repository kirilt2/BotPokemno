

-- Utility Functions
local function logCommand(player, command)
	print(player.Name .. " executed command: " .. command)
end

local function getPlayerByName(name)
	return game.Players:FindFirstChild(name)
end

local function isPlayerAdmin(player)
	return player and player.Name and game.Players:FindFirstChild(player.Name) and admins[player.Name]
end

-- Command Metatable
local CommandMetatable = {}
function CommandMetatable:TeleportTo(targetPlayer)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character.PrimaryPart then
		self.Character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)
		logCommand(self, "teleport " .. targetPlayer.Name)
	else
		warn("Target player does not have a character.")
	end
end

function CommandMetatable:Fly()
	local humanoid = self.Character:FindFirstChild("Humanoid")
	if humanoid then
		humanoid.PlatformStand = true
		local bodyVelocity = Instance.new("BodyVelocity")
		bodyVelocity.Velocity = Vector3.new(0, 50, 0)
		bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
		bodyVelocity.Parent = self.Character.PrimaryPart

		wait(10) -- Fly for 10 seconds
		humanoid.PlatformStand = false
		bodyVelocity:Destroy()
		logCommand(self, "fly")
	else
		warn("Humanoid not found for flying.")
	end
end

function CommandMetatable:Kick(reason)
	local player = game.Players:FindFirstChild(self.Name)
	if player then
		player:Kick(reason or "No reason provided")
		logCommand(self, "kick " .. player.Name)
	else
		warn("Player not found for kicking.")
	end
end

function CommandMetatable:Bring(targetName)
	local targetPlayer = getPlayerByName(targetName)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character.PrimaryPart then
		targetPlayer.Character:SetPrimaryPartCFrame(self.Character.PrimaryPart.CFrame)
		logCommand(self, "bring " .. targetName)
	else
		warn("Target player not found for bringing.")
	end
end

function CommandMetatable:Freeze(targetName)
	local targetPlayer = getPlayerByName(targetName)
	if targetPlayer and targetPlayer.Character then
		local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
		if humanoid then
			humanoid.PlatformStand = true
			logCommand(self, "freeze " .. targetName)
		else
			warn("Humanoid not found for freezing.")
		end
	else
		warn("Target player not found for freezing.")
	end
end

function CommandMetatable:Unfreeze(targetName)
	local targetPlayer = getPlayerByName(targetName)
	if targetPlayer and targetPlayer.Character then
		local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
		if humanoid then
			humanoid.PlatformStand = false
			logCommand(self, "unfreeze " .. targetName)
		else
			warn("Humanoid not found for unfreezing.")
		end
	else
		warn("Target player not found for unfreezing.")
	end
end

function CommandMetatable:ChangeSpeed(speed)
	local humanoid = self.Character:FindFirstChild("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = speed or 16
		logCommand(self, "changespeed " .. tostring(speed))
	else
		warn("Humanoid not found for changing speed.")
	end
end

function CommandMetatable:ChangeJumpPower(jumpPower)
	local humanoid = self.Character:FindFirstChild("Humanoid")
	if humanoid then
		humanoid.JumpPower = jumpPower or 50
		logCommand(self, "changejumppower " .. tostring(jumpPower))
	else
		warn("Humanoid not found for changing jump power.")
	end
end

-- Admin Players List
local admins = {
	["hellomenamearmy"] = true,
	["Player2"] = true,
	["Admin3"] = true,
	["Admin4"] = true,
}

-- Commands Dictionary
local commands = {
	teleport = function(admin, target)
		local targetPlayer = getPlayerByName(target)
		if targetPlayer then
			admin:TeleportTo(targetPlayer)
		else
			warn("Target player not found for teleport.")
		end
	end,

	fly = function(admin)
		admin:Fly()
	end,

	kick = function(admin, target, reason)
		local targetPlayer = getPlayerByName(target)
		if targetPlayer then
			admin:Kick(reason)
		else
			warn("Target player not found for kick.")
		end
	end,

	bring = function(admin, target)
		admin:Bring(target)
	end,

	freeze = function(admin, target)
		admin:Freeze(target)
	end,

	unfreeze = function(admin, target)
		admin:Unfreeze(target)
	end,

	changespeed = function(admin, speed)
		admin:ChangeSpeed(tonumber(speed))
	end,

	changejumppower = function(admin, jumpPower)
		admin:ChangeJumpPower(tonumber(jumpPower))
	end,

	cframe = function(admin, x, y, z)
		if admin.Character and admin.Character.PrimaryPart then
			local newCFrame = admin.Character.PrimaryPart.CFrame * CFrame.new(tonumber(x), tonumber(y), tonumber(z))
			admin.Character:SetPrimaryPartCFrame(newCFrame)
			logCommand(admin, "cframe " .. x .. ", " .. y .. ", " .. z)
		else
			warn("Admin character not found for CFrame.")
		end
	end,

	-- New Command Examples
	announce = function(admin, ...)
		local message = table.concat({...}, " ")
		for _, player in pairs(game.Players:GetPlayers()) do
			if player:FindFirstChild("PlayerGui") then
				local screenGui = Instance.new("ScreenGui", player.PlayerGui)
				local textLabel = Instance.new("TextLabel", screenGui)
				textLabel.Size = UDim2.new(1, 0, 0, 50)
				textLabel.Position = UDim2.new(0, 0, 0, 0)
				textLabel.Text = message
				textLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
				wait(5)
				screenGui:Destroy()
			end
		end
		logCommand(admin, "announce " .. message)
	end,

	revive = function(admin, target)
		local targetPlayer = getPlayerByName(target)
		if targetPlayer and targetPlayer.Character then
			local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
			if humanoid then
				humanoid.Health = humanoid.MaxHealth
				logCommand(admin, "revive " .. target)
			else
				warn("Humanoid not found for reviving.")
			end
		else
			warn("Target player not found for reviving.")
		end
	end,

	teleportAll = function(admin)
		for _, player in pairs(game.Players:GetPlayers()) do
			if player.Character and player.Character.PrimaryPart then
				player.Character:SetPrimaryPartCFrame(admin.Character.PrimaryPart.CFrame)
			end
		end
		logCommand(admin, "teleportall")
	end,

	-- Add more commands here as needed
}

-- Function to handle admin commands
local function onAdminAdded(player)
	local adminCommands = setmetatable({}, {__index = CommandMetatable})

	player.CharacterAdded:Connect(function(character)
		adminCommands.Character = character
	end)

	player.Chatted:Connect(function(message)
		local splitMessage = message:split(" ")
		local command = splitMessage[1]:lower()

		if command:sub(1, 1) == "/" then
			command = command:sub(2)  -- Remove the prefix

			if commands[command] then
				table.remove(splitMessage, 1) -- Remove command from arguments
				commands[command](adminCommands, unpack(splitMessage)) -- Execute the command
			else
				warn("Command not found: " .. command)
			end
		end
	end)
end

-- Hooking up the PlayerAdded event
game.Players.PlayerAdded:Connect(function(player)
	if isPlayerAdmin(player) then
		onAdminAdded(player)
	end
end)

-- String Split Function
function string:split(separator)
	local result = {}
	for part in self:gmatch("[^"..separator.."]+") do
		table.insert(result, part)
	end
	return result
end
